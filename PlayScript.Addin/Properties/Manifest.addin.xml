<ExtensionModel>
	<Extension path="/MonoDevelop/SourceEditor2/SyntaxModes">
		<Templates resource="ActionScriptSyntaxMode.xml" />
		<Templates resource="PlayScriptSyntaxMode.xml" />
	</Extension>
	<Extension path="/MonoDevelop/Ide/FileTemplates">
		<FileTemplate id="PlayScriptEmptyFile" file="templates/PsEmptyFile.xft.xml" />
		<FileTemplate id="PlayScriptEmptyClass" file="templates/PsEmptyClass.xft.xml" />
		<FileTemplate id="PlayScriptEmptyInterface" file="templates/PsEmptyInterface.xft.xml" />
		<FileTemplate id="ActionScriptEmptyFile" file="templates/AsEmptyFile.xft.xml" />
		<FileTemplate id="ActionScriptEmptyClass" file="templates/AsEmptyClass.xft.xml" />
		<FileTemplate id="ActionScriptEmptyInterface" file="templates/AsEmptyInterface.xft.xml" />
		<FileTemplate id="CSharpAssemblyInfo" file="templates/AssemblyInfo.xft.xml" />
	</Extension>
	<Extension path="/MonoDevelop/Ide/ProjectTemplates">
		<ProjectTemplate id="PlayScriptEmptyProject" file="templates/PsEmptyProject.xpt.xml" />
		<ProjectTemplate id="PlayScriptLibrary" file="templates/PsLibrary.xpt.xml" />
		<ProjectTemplate id="PlayScriptConsoleProject" file="templates/PsConsoleProject.xpt.xml" />
		<ProjectTemplate id="ActionScriptEmptyProject" file="templates/AsEmptyProject.xpt.xml" />
		<ProjectTemplate id="ActionScriptLibrary" file="templates/AsLibrary.xpt.xml" />
		<ProjectTemplate id="ActionScriptConsoleProject" file="templates/AsConsoleProject.xpt.xml" />
	</Extension>
	<Extension path="/MonoDevelop/Ide/FileFilters">
		<FileFilter id="ActionScript" insertbefore="Assemblies" _label="ActionScript Files" extensions="*.as" />
		<FileFilter id="PlayScript" insertbefore="Assemblies" _label="PlayScript Files" extensions="*.play" />
		<FileFilter id="PlayScriptProject" insertbefore="Assemblies" _label="PlayScript Projects" extensions="*.psproj" />
	</Extension>
	<Extension path="/MonoDevelop/Core/StockIcons">
		<StockIcon stockid="md-playscript-project" file="icons/playscript-project-16.png" size="Menu" />
		<StockIcon stockid="md-playscript-project" file="icons/playscript-project-32.png" size="Dnd" />
		<StockIcon stockid="md-playscript-file" file="icons/playscript-file-source-16.png" size="Menu" />
		<StockIcon stockid="md-playscript-file" file="icons/playscript-file-source-32.png" size="Dnd" />
		<StockIcon stockid="md-actionscript-project" file="icons/playscript-project-16.png" size="Menu" />
		<StockIcon stockid="md-actionscript-project" file="icons/playscript-project-32.png" size="Dnd" />
		<StockIcon stockid="md-actionscript-file" file="icons/actionscript-file-source-16.png" size="Menu" />
		<StockIcon stockid="md-actionscript-file" file="icons/actionscript-file-source-32.png" size="Dnd" />
	</Extension>
	<Extension path="/MonoDevelop/Core/MimeTypes">
		<MimeType id="application/psproject+xml" _description="PlayScript project file" baseType="application/xml">
			<File pattern="*.psproj" />
		</MimeType>
		<MimeType id="text/x-playscript" _description="PlayScript source code" icon="md-playscript-file" isText="true">
			<File pattern="*.play" />
		</MimeType>
		<MimeType id="application/asproject+xml" _description="ActionScript project file" baseType="application/xml">
			<File pattern="*.asproj" />
		</MimeType>
		<MimeType id="text/x-actionscript" _description="ActionScript source code" icon="md-actionscript-file" isText="true">
			<File pattern="*.as" />
		</MimeType>
	</Extension>
	<Extension path="/MonoDevelop/ProjectModel/LanguageBindings">
		<LanguageBinding id="ActionScript" supportedextensions=".as" class="MonoDevelop.PlayScript.ActionScriptLanguageBinding" />
		<LanguageBinding id="PlayScript" supportedextensions=".play" class="MonoDevelop.PlayScript.PlayScriptLanguageBinding" />
	</Extension>
	<Extension path="/MonoDevelop/ProjectModel/MSBuildItemTypes">
		<DotNetProject language="PlayScript" extension="psproj" guid="{1fc382b4-0f88-4dbe-994d-7aa7d07975c6}" import="$(MSBuildBinPath)\Microsoft.PlaySharp.targets" resourceHandler="MonoDevelop.PlayScript.Project.CSharpResourceIdBuilder" />
		<DotNetProject language="PlayScript" extension="asproj" guid="{1fc382b4-0f88-4dbe-994d-7aa7d07975c6}" import="$(MSBuildBinPath)\Microsoft.PlaySharp.targets" resourceHandler="MonoDevelop.PlayScript.Project.CSharpResourceIdBuilder" />
	</Extension>
	<Extension path="/MonoDevelop/ProjectModel/MSBuildItemTypes">
		<DotNetProject language="ActionScript" extension="psproj" guid="{1fc382b4-0f88-4dbe-994d-7aa7d07975c6}" import="$(MSBuildBinPath)\Microsoft.CSharp.targets" resourceHandler="MonoDevelop.PlayScript.Project.CSharpResourceIdBuilder" />
		<!--		<DotNetProjectSubtype guid="{1fc382b4-0f88-4dbe-994d-7aa7d07975c6}" type="MonoDevelop.AddinMaker.AddinProject" useXBuild="true" requireXbuild="false" />-->
	</Extension>
	<Extension path="/MonoDevelop/ProjectModel/Gui/ItemOptionPanels/Build/General">
		<Condition id="ActiveLanguage" value="PlayScript">
			<Panel id="CSharpCompilerOptionsPanel" _label="PlayScript" class="MonoDevelop.PlayScript.Project.CompilerOptionsPanel" />
		</Condition>
	</Extension>
	<Extension path="/MonoDevelop/ProjectModel/Gui/ItemOptionPanels/Build/General">
		<Condition id="ActiveLanguage" value="ActionScript">
			<Panel id="CSharpCompilerOptionsPanel" _label="PlayScript" class="MonoDevelop.PlayScript.Project.CompilerOptionsPanel" />
		</Condition>
	</Extension>
	<Extension path="/MonoDevelop/ProjectModel/Gui/ItemOptionPanels/Build/Compiler">
		<Condition id="ActiveLanguage" value="PlayScript">
			<Panel id="CSharpCodeGenerationPanel" _label="Compiler" class="MonoDevelop.PlayScript.Project.CodeGenerationPanel" />
		</Condition>
	</Extension>
	<Extension path="/MonoDevelop/ProjectModel/Gui/ItemOptionPanels/Build/Compiler">
		<Condition id="ActiveLanguage" value="ActionScript">
			<Panel id="CSharpCodeGenerationPanel" _label="Compiler" class="MonoDevelop.PlayScript.Project.CodeGenerationPanel" />
		</Condition>
	</Extension>
	<Extension path="/MonoDevelop/Core/SupportPackages">
		<Condition id="PackageNotInstalled" name="playscript" version="3.99.0.0">
			<Package name="pscorlib" version="3.99.0.0" clrVersion="Default">
				<Assembly file="MonoDevelop.PlayScript.SupportPackages/pscorlib.dll" />
				<Assembly file="MonoDevelop.PlayScript.SupportPackages/PlayScript.Dynamic.dll" />
				<Assembly file="MonoDevelop.PlayScript.SupportPackages/Mono.PlayScript.dll" />
				<Assembly file="MonoDevelop.PlayScript.SupportPackages/PlayScript.Optimization.dll" />
			</Package>
			<Package name="pscorlib_aot" version="3.99.0.0" clrVersion="Default">
				<Assembly file="MonoDevelop.PlayScript.SupportPackages/pscorlib_aot.dll" />
				<Assembly file="MonoDevelop.PlayScript.SupportPackages/PlayScript.Dynamic_aot.dll" />
				<Assembly file="MonoDevelop.PlayScript.SupportPackages/Mono.PlayScript.dll" />
				<Assembly file="MonoDevelop.PlayScript.SupportPackages/PlayScript.Optimization.dll" />
			</Package>
		</Condition>
	</Extension>
	<Extension path="/MonoDevelop/Ide/ReferenceFinder">
		<ReferenceFinder supportedmimetypes="text/x-actionscript,text/x-playscript" class="MonoDevelop.PlayScript.Refactoring.CSharpReferenceFinder" />
	</Extension>
	<Extension path="/MonoDevelop/Ide/TextEditorExtensions">
		<!-- indent engine must be before the completion text editor engine,
		otherwise stuff like

		int Foo {
		         get;private set';'

		will end up as

		int Foo {
		         get;
		         privaet;

		-->
		<Class fileExtensions=".as,.play" class="MonoDevelop.PlayScript.Formatting.CSharpTextEditorIndentation" />
		<Class fileExtensions=".as,.play" class="MonoDevelop.PlayScript.Completion.CSharpCompletionTextEditorExtension" />
		<Class fileExtensions=".as,.play" class="MonoDevelop.PlayScript.Highlighting.HighlightUsagesExtension" />
		<Class fileExtensions=".as,.play" class="MonoDevelop.PlayScript.PathedDocumentTextEditorExtension" />
	</Extension>
	<Extension path="/MonoDevelop/Ide/CodeFormatters">
		<Formatter mimeType="text/x-actionscript" class="MonoDevelop.PlayScript.Formatting.CSharpFormatter" />
		<Formatter mimeType="text/x-playscript" class="MonoDevelop.PlayScript.Formatting.CSharpFormatter" />
	</Extension>
	<Extension path="/MonoDevelop/TypeSystem/Ambiences">
		<Ambience mimeType="text/x-actionscript" class="MonoDevelop.PlayScript.CSharpAmbience" />
		<Ambience mimeType="text/x-playscript" class="MonoDevelop.PlayScript.CSharpAmbience" />
	</Extension>
	<Extension path="/MonoDevelop/TypeSystem/Parser">
		<Parser class="MonoDevelop.PlayScript.Parser.TypeSystemParser" mimeType="text/x-actionscript" />
		<Parser class="MonoDevelop.PlayScript.Parser.TypeSystemParser" mimeType="text/x-playscript" />
	</Extension>
	<Extension path="/MonoDevelop/TypeSystem/FoldingParser">
		<Parser class="MonoDevelop.PlayScript.Parser.CSharpFoldingParser" mimeType="text/x-actionscript" />
		<Parser class="MonoDevelop.PlayScript.Parser.CSharpFoldingParser" mimeType="text/x-playscript" />
	</Extension>
	<Extension path="/MonoDevelop/TypeSystem/CodeGenerators">
		<Generator class="MonoDevelop.PlayScript.Refactoring.CSharpCodeGenerator" mimeType="text/x-actionscript" />
		<Generator class="MonoDevelop.PlayScript.Refactoring.CSharpCodeGenerator" mimeType="text/x-playscript" />
	</Extension>
	<Extension path="/MonoDevelop/ProjectModel/Gui/DefaultPolicyPanels/SourceCode">
		<Section id="PlayScriptNameConventions" _label="PlayScript Name Conventions" fill="true" class="MonoDevelop.PlayScript.Refactoring.CodeIssues.NameConventionPanel" icon="md-prefs-name-conventions" />
	</Extension>
	<Extension path="/MonoDevelop/ProjectModel/Gui/ItemOptionPanels/SourceCode">
		<Section id="PlayScriptNameConventions" _label="PlayScript Name Conventions" fill="true" class="MonoDevelop.PlayScript.Refactoring.CodeIssues.NameConventionPanel" icon="md-prefs-name-conventions" />
	</Extension>
	<Extension path="/MonoDevelop/Ide/GlobalOptionsDialog/SourceCode">
		<Section id="PlayScriptNameConventions" _label="PlayScript Name Conventions" fill="true" class="MonoDevelop.PlayScript.Refactoring.CodeIssues.NameConventionPanel" icon="md-prefs-name-conventions" />
	</Extension>
	<Extension path="/MonoDevelop/ProjectModel/PolicySets/Mono">
		<Policies resource="PsMonoNameConventionPolicy.xml" />
	</Extension>
	<Extension path="/MonoDevelop/ProjectModel/PolicySets">
		<PolicySet id="KR" _name="K&amp;R style" allowDiffSerialize="false">
			<Policies resource="PsKRCSharpPolicy.xml" />
			<Policies resource="PsInvariantTextStylePolicy.xml" />
		</PolicySet>
	</Extension>
	<Extension path="/MonoDevelop/ProjectModel/PolicySets">
		<PolicySet id="1TBS" _name="SharpDevelop style (1TBS)" allowDiffSerialize="false">
			<Policies resource="PsSharpDevelopCSharpPolicy.xml" />
			<Policies resource="PsInvariantTextStylePolicy.xml" />
		</PolicySet>
	</Extension>
	<Extension path="/MonoDevelop/ProjectModel/PolicySets/VisualStudio">
		<Policies resource="PsAllmanCSharpPolicy.xml" />
	</Extension>
	<Extension path="/MonoDevelop/ProjectModel/PolicySets">
		<PolicySet id="Whitesmiths" _name="Whitesmiths style" allowDiffSerialize="false">
			<Policies resource="PsWhitesmithsCSharpPolicy.xml" />
			<Policies resource="PsInvariantTextStylePolicy.xml" />
		</PolicySet>
	</Extension>
	<Extension path="/MonoDevelop/ProjectModel/PolicySets">
		<PolicySet id="GNU" _name="GNU style" allowDiffSerialize="false">
			<Policies resource="PsGNUCSharpPolicy.xml" />
			<Policies resource="PsGNUTextStylePolicy.xml" />
		</PolicySet>
	</Extension>
	<Extension path="/MonoDevelop/ProjectModel/Gui/MimeTypePolicyPanels">
		<Panel id="ActionScriptFormatting" _label="ActionScript Format" mimeType="text/x-actionscript" class="MonoDevelop.PlayScript.Formatting.CSharpFormattingPolicyPanel" />
		<Panel id="PlayScriptFormatting" _label="PlayScript Format" mimeType="text/x-playscript" class="MonoDevelop.PlayScript.Formatting.CSharpFormattingPolicyPanel" />
	</Extension>
	<!--	<ConditionType id="MSBuildTargetIsAvailable" type="MonoDevelop.Projects.Formats.MSBuild.TargetsAvailableCondition" />-->
	<!--	<Extension path = "/MonoDevelop/Ide/Commands">
		<Command id = "MonoDevelop.CodeGeneration.CodeGenerationCommands.ShowCodeGenerationWindow"
				_label = "S_how Code Generation Window"
				shortcut = "Alt|Insert"
				macShortcut = "Meta|I" />
	</Extension>-->
	<Extension path = "/MonoDevelop/ProjectModel/MSBuildItemTypes">
		<DotNetProject
			language="PlayScript"
			extension="psproj"
			guid="{464403d2-eb41-442a-a1f1-9bf858b8865f}"
			import="$(PsBuildBinPath)\PlayScript.targets"
			resourceHandler="MonoDevelop.PlayScript.Project.CSharpResourceIdBuilder"
			/>
		<Condition id="MSBuildTargetIsAvailable" target="$(PsBuildBinPath)\PlayScript.Portable.Targets">
			<DotNetProjectSubtype
				guid="{786C830F-07A1-408B-BD7F-6EE04809D6DB}"
				type="MonoDevelop.Projects.PortableDotNetProject"
				useXBuild="true">
				<AddImport language="CPlayScript projects="$(PsBuildBinPath)\PlayScript.Portable.Targets" />
				<RemoveImport language="CPlayScript projects="$(PsBuildBinPath)\PlayScript.Targets" />
			</DotNetProjectSubtype>
		</Condition>
	</Extension>
	<Extension path = "/MonoDevelop/ProjectModel/MSBuildItemTypes">
		<DotNetProject
			language="PlayScript"
			extension="asproj"
			guid="{496fe5ed-847f-4824-ad86-a92108ffcf0f}"
			import="$(PsBuildBinPath)\PlayScript.targets"
			resourceHandler="MonoDevelop.PlayScript.Project.CSharpResourceIdBuilder"
			/>
		<!--No portable libs for ActionScript, only PlayScript-->
	</Extension>
	<Extension path="/MonoDevelop/ProjectModel/SerializableClasses">
		<DataType class="MonoDevelop.PlayScript.Project.CSharpCompilerParameters" />
		<DataType class="MonoDevelop.PlayScript.Project.CSharpProjectParameters" />
	</Extension>--&gt;

	<!--	
	<Extension path = "/MonoDevelop/Refactoring/CodeActions">
		<Action mimeType="text/x-playscript"
			_title = "Move type to another file"
			_description = "Moves current type to another file that matches the name of the type."
			class = "MonoDevelop.CSharp.Refactoring.CodeActions.MoveTypeToFile" />
		<Action mimeType="text/x-playscript"
			_title = "Convert to enum"
			_description = "Converts constant fields to enumeration"
			class = "MonoDevelop.CSharp.Refactoring.CodeActions.ConvertToEnumAction" />
	</Extension>
--><Extension path="/MonoDevelop/Ide/TextEditorResolver"><Resolver class="MonoDevelop.PlayScript.Resolver.TextEditorResolverProvider" mimeType="text/x-playscript" /></Extension><!--	<Extension path = "/MonoDevelop/Refactoring/CodeIssues">
		<CodeIssue mimeType="text/x-playscript" severity = "Error" class="MonoDevelop.CSharp.Refactoring.CodeIssues.MonoTODOIssue"/>
	</Extension>--><Extension path="/MonoDevelop/Ide/Commands/TextEditor"><Command id="MonoDevelop.CSharp.Highlighting.MoveToUsagesCommand.PrevUsage" defaultHandler="MonoDevelop.PlayScript.Highlighting.MoveToPrevUsageHandler" shortcut="Ctrl|Shift|Up" macShortcut="Meta|Shift|Up" _label="_Move to prev usage" /><Command id="MonoDevelop.CSharp.Highlighting.MoveToUsagesCommand.NextUsage" defaultHandler="MonoDevelop.PlayScript.Highlighting.MoveToNextUsageHandler" shortcut="Ctrl|Shift|Down" macShortcut="Meta|Shift|Down"
			_label="_Move to next usage" /><Command id="MonoDevelop.CSharp.ExpandCommands.ExpandSelection" defaultHandler="MonoDevelop.PlayScript.ExpandSelectionHandler" shortcut="Alt|Shift|Up" macShortcut="Alt|Shift|Up" _label="_Expand selection" /><Command id="MonoDevelop.CSharp.ExpandCommands.ShrinkSelection" defaultHandler="MonoDevelop.PlayScript.ShrinkSelectionHandler" shortcut="Alt|Shift|Down" macShortcut="Alt|Shift|Down"
			_label="_Shrink selection" /></Extension><Extension path="/MonoDevelop/Refactoring/CodeGenerators"><Class class="MonoDevelop.CodeGeneration.CreateConstructorGenerator" /><Class class="MonoDevelop.CodeGeneration.ReadonlyPropertyGenerator" /><Class class="MonoDevelop.CodeGeneration.PropertyGenerator" /><Class class="MonoDevelop.CodeGeneration.ImplementInterfaceMembersGenerator" /><Class class="MonoDevelop.CodeGeneration.RequiredProtocolMemberGenerator" /><Class class="MonoDevelop.CodeGeneration.OptionalProtocolMemberGenerator" /><Class class="MonoDevelop.CodeGeneration.PartialGenerator" /><Class class="MonoDevelop.CodeGeneration.OverrideMembersGenerator" /><Class
			class="MonoDevelop.CodeGeneration.ToStringGenerator" /><Class class="MonoDevelop.CodeGeneration.RaiseEventMethodGenerator" /><Class class="MonoDevelop.CodeGeneration.EqualityMembersGenerator" /><Class class="MonoDevelop.CodeGeneration.WriteLineGenerator" /></Extension>--&gt;

	<Extension path="/MonoDevelop/Refactoring/CodeActionSource"><Source class="MonoDevelop.PlayScript.Refactoring.CodeActions.NRefactoryCodeActionSource" /></Extension><Extension path="/MonoDevelop/Refactoring/CodeIssueSource"><Source class="MonoDevelop.PlayScript.Refactoring.CodeIssues.NRefactoryCodeIssueSource" /></Extension><Extension path="/MonoDevelop/SourceEditor2/TooltipProviders"><Class id="LanguageItem" class="MonoDevelop.SourceEditor.LanguageItemTooltipProvider" /></Extension><Extension path="/MonoDevelop/Ide/CompletionCharacters"><Complete language="PlayScript" commitOnSpace="True"
			commitChars="{}[]().,:;+-*/%&amp;|^!~=&lt;&gt;?@#'&quot;\" />
	</Extension>
	<ExtensionPoint path = "/MonoDevelop/ProjectModel/UnknownMSBuildProjectTypes" name = "Unknown MSBuild project types">
		<Description>Project types not supported by MonoDevelop</Description>
		<ExtensionNode name="ProjectType" type="MonoDevelop.Projects.Extensions.UnknownProjectTypeNode"/>
	</ExtensionPoint>
		<ExtensionPoint path = "/MonoDevelop/ProjectModel/MSBuildImportRedirects" name = "MSBuild import redirects">
		<Description>Allows replacing an import by another one when a project is evaluated</Description>
		<ExtensionNode name="Import" type="MonoDevelop.Projects.Extensions.ImportRedirectTypeNode"/>
	</ExtensionPoint>
	<ExtensionPoint path = "/MonoDevelop/ProjectModel/MSBuildProjectItemTypes" name = "MSBuild project item subclasses">
		<Description>Allows defining ProjectItem subclasses to be used for specific msbuild project items</Description>
		<ExtensionNode name="Item" customAttributeType="MonoDevelop.Projects.ExportProjectItemTypeAttribute" />
	</ExtensionPoint>
	<Extension path = "/MonoDevelop/ProjectModel/UnknownMSBuildProjectTypes">
			<ProjectType guid = "{464403d2-eb41-442a-a1f1-9bf858b8865f}" name = "PlayScript" extension="psproj" addin = "PlayScript" />
			<ProjectType guid = "{496fe5ed-847f-4824-ad86-a92108ffcf0f}" name = "ActionScript" extension="asproj" addin = "PlayScript" />
	</Extension>
	<Extension path="/MonoDevelop/ProjectModel/MSBuildItemTypes">
		<DotNetProject language="PlayScript" extension="psproj" guid="{464403d2-eb41-442a-a1f1-9bf858b8865f}" type="MonoDevelop.PlayScript.PlayScriptProject"
		resourceHandler="MonoDevelop.PlayScript.Project.CSharpResourceIdBuilder" />
		<DotNetProject language="PlayScript" extension="asproj" guid="{496fe5ed-847f-4824-ad86-a92108ffcf0f}" type="MonoDevelop.PlayScript.ActionScriptProject"
		 resourceHandler="MonoDevelop.PlayScript.Project.CSharpResourceIdBuilder" />
		<!--<DotNetProjectSubtype guid="{1fc382b4-0f88-4dbe-994d-7aa7d07975c6}" type="MonoDevelop.AddinMaker.AddinProject" useXBuild="true" requireXbuild="false" />-->
	</Extension>
<!--		<Extension path="/MonoDevelop/ProjectModel/MSBuildItemTypes">
		<DotNetProject language="PlayScript" extension="psproj" guid="{464403d2-eb41-442a-a1f1-9bf858b8865f}" type="MonoDevelop.PlayScript.PlayScriptProject"
		import="$(MSBuildBinPath)\Microsoft.PlaySharp.targets" resourceHandler="MonoDevelop.PlayScript.Project.CSharpResourceIdBuilder" />
		<DotNetProject language="PlayScript" extension="asproj" guid="{496fe5ed-847f-4824-ad86-a92108ffcf0f}" type="MonoDevelop.PlayScript.ActionScriptProject"
		import="$(MSBuildBinPath)\Microsoft.PlaySharp.targets" resourceHandler="MonoDevelop.PlayScript.Project.CSharpResourceIdBuilder" />
		<!--<DotNetProjectSubtype guid="{1fc382b4-0f88-4dbe-994d-7aa7d07975c6}" type="MonoDevelop.AddinMaker.AddinProject" useXBuild="true" requireXbuild="false" />-->
	</Extension>-->
</ExtensionModel>